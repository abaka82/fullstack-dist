{"version":3,"sources":["../../../server/config/seed.js"],"names":[],"mappings":";;;;;AAKA;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,kBAAQ,IAAR,CAAa,EAAb,EAAiB,MAAjB,GACG,IADH,CACQ,YAAM;AACV,oBAAQ,MAAR,CAAe;AACb,WAAO,KAAP;GADF,EADU;CAAN,CADR","file":"seed.js","sourcesContent":["/**\r\n * Populate DB with sample data on server start\r\n * to disable, edit config/environment/index.js, and set `seedDB: false`\r\n */\r\n\r\n'use strict';\r\nimport Thing from '../api/thing/thing.model';\r\nimport User from '../api/user/user.model';\r\nimport Product from '../api/product/product.model';\r\n\r\n\r\nProduct.find({}).remove()\r\n  .then(() => {\r\n    Product.create({\r\n      Title: 'Tes'\r\n    });\r\n  });\r\n\r\n/*Thing.find({}).remove()\r\n  .then(() => {\r\n    Thing.create({\r\n      name: 'Development Tools',\r\n      info: 'Integration with popular tools such as Bower, Grunt, Babel, Karma, ' +\r\n             'Mocha, JSHint, Node Inspector, Livereload, Protractor, Jade, ' +\r\n             'Stylus, Sass, and Less.'\r\n    }, {\r\n      name: 'Server and Client integration',\r\n      info: 'Built with a powerful and fun stack: MongoDB, Express, ' +\r\n             'AngularJS, and Node.'\r\n    }, {\r\n      name: 'Smart Build System',\r\n      info: 'Build system ignores `spec` files, allowing you to keep ' +\r\n             'tests alongside code. Automatic injection of scripts and ' +\r\n             'styles into your index.html'\r\n    }, {\r\n      name: 'Modular Structure',\r\n      info: 'Best practice client and server structures allow for more ' +\r\n             'code reusability and maximum scalability'\r\n    }, {\r\n      name: 'Optimized Build',\r\n      info: 'Build process packs up your templates as a single JavaScript ' +\r\n             'payload, minifies your scripts/css/images, and rewrites asset ' +\r\n             'names for caching.'\r\n    }, {\r\n      name: 'Deployment Ready',\r\n      info: 'Easily deploy your app to Heroku or Openshift with the heroku ' +\r\n             'and openshift subgenerators'\r\n    });\r\n  });*/\r\n\r\n/*User.find({}).remove()\r\n  .then(() => {\r\n    User.create({\r\n      provider: 'local',\r\n      firstName: 'Test',\r\n      lastName: 'User',\r\n      email: 'test@example.com',\r\n      password: 'test'\r\n    }, {\r\n      provider: 'local',\r\n      role: 'admin',\r\n      firstname: 'Admin',\r\n      lastname: 'admin',\r\n      email: 'admin@example.com',\r\n      password: 'admin'\r\n    })\r\n    .then(() => {\r\n      console.log('finished populating users');\r\n    });\r\n  });*/\r\n"]}