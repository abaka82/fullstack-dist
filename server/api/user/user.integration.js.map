{"version":3,"sources":["../../../../server/api/user/user.integration.js"],"names":[],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,SAAS,WAAT,EAAsB,YAAW;AAC/B,MAAI,IAAJ;;;AAD+B,QAI/B,CAAO,YAAW;AAChB,WAAO,eAAK,MAAL,GAAc,IAAd,CAAmB,YAAW;AACnC,aAAO,mBAAS;AACd,mBAAW,WAAX;AACA,kBAAU,MAAV;AACA,eAAO,kBAAP;AACA,kBAAU,UAAV;OAJK,CAAP,CADmC;;AAQnC,aAAO,KAAK,IAAL,EAAP,CARmC;KAAX,CAA1B,CADgB;GAAX,CAAP;;;AAJ+B,OAkB/B,CAAM,YAAW;AACf,WAAO,eAAK,MAAL,EAAP,CADe;GAAX,CAAN,CAlB+B;;AAsB/B,WAAS,mBAAT,EAA8B,YAAW;AACvC,QAAI,KAAJ,CADuC;;AAGvC,WAAO,UAAS,IAAT,EAAe;AACpB,2CACG,IADH,CACQ,aADR,EAEG,IAFH,CAEQ;AACJ,eAAO,kBAAP;AACA,kBAAU,UAAV;OAJJ,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,gBAAQ,IAAI,IAAJ,CAAS,KAAT,CADS;AAEjB,eAFiB;OAAd,CARP,CADoB;KAAf,CAAP,CAHuC;;AAkBvC,OAAG,uDAAH,EAA4D,UAAS,IAAT,EAAe;AACzE,2CACG,GADH,CACO,eADP,EAEG,GAFH,CAEO,eAFP,EAEwB,YAAY,KAAZ,CAFxB,CAGG,MAHH,CAGU,GAHV,EAIG,MAJH,CAIU,cAJV,EAI0B,MAJ1B,EAKG,GALH,CAKO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,IAAJ,CAAS,GAAT,CAAa,QAAb,GAAwB,MAAxB,CAA+B,KAA/B,CAAqC,KAAK,GAAL,CAAS,QAAT,EAArC,EADiB;AAEjB,eAFiB;OAAd,CALP,CADyE;KAAf,CAA5D,CAlBuC;;AA8BvC,OAAG,kDAAH,EAAuD,UAAS,IAAT,EAAe;AACpE,2CACG,GADH,CACO,eADP,EAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,IAHP,EADoE;KAAf,CAAvD,CA9BuC;GAAX,CAA9B,CAtB+B;CAAX,CAAtB","file":"user.integration.js","sourcesContent":["'use strict';\r\n\r\nimport app from '../..';\r\nimport User from './user.model';\r\nimport request from 'supertest';\r\n\r\ndescribe('User API:', function() {\r\n  var user;\r\n\r\n  // Clear users before testing\r\n  before(function() {\r\n    return User.remove().then(function() {\r\n      user = new User({\r\n        firstname: 'Fake User',\r\n        lastname: 'last',\r\n        email: 'test@example.com',\r\n        password: 'password'\r\n      });\r\n\r\n      return user.save();\r\n    });\r\n  });\r\n\r\n  // Clear users after testing\r\n  after(function() {\r\n    return User.remove();\r\n  });\r\n\r\n  describe('GET /api/users/me', function() {\r\n    var token;\r\n\r\n    before(function(done) {\r\n      request(app)\r\n        .post('/auth/local')\r\n        .send({\r\n          email: 'test@example.com',\r\n          password: 'password'\r\n        })\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          token = res.body.token;\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with a user profile when authenticated', function(done) {\r\n      request(app)\r\n        .get('/api/users/me')\r\n        .set('authorization', 'Bearer ' + token)\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          res.body._id.toString().should.equal(user._id.toString());\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with a 401 when not authenticated', function(done) {\r\n      request(app)\r\n        .get('/api/users/me')\r\n        .expect(401)\r\n        .end(done);\r\n    });\r\n  });\r\n});\r\n"]}