{"version":3,"sources":["../../../../server/api/product/product.controller.js"],"names":[],"mappings":"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","file":"product.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/products              ->  index\r\n * POST    /api/products              ->  create\r\n * GET     /api/products/:id          ->  show\r\n * PUT     /api/products/:id          ->  update\r\n * DELETE  /api/products/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport Product from './product.model';\r\n\r\nvar path = require('path');\r\nvar logger = require('../../components/logger');\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    var updated = _.merge(entity, updates);\r\n    return updated.save()\r\n      .then(updated => {\r\n        return updated;\r\n      });\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if (entity) {\r\n      return entity.remove()\r\n        .then(() => {\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n/*\r\nfunction saveFile(res, file) {\r\n  return function(entity){\r\n    var newPath = '/assets/uploads/' + path.basename(file.path);\r\n    entity.imageUrl = newPath;\r\n    logger.debug('entity : '+JSON.stringify(entity));\r\n    return entity.saveAsync().spread(function(updated, numberAffected) {\r\n      logger.debug('updated : '+JSON.stringify(updated));\r\n      logger.debug('numberAffected : '+numberAffected);\r\n      return updated;\r\n    });\r\n  }\r\n}\r\n*/\r\nfunction saveFile(res, file) {\r\n  logger.debug(\"Product.controller - saveFile function\");\r\n  return function(entity){\r\n    var newPath = '/assets/uploads/product/' + path.basename(file.path);\r\n    entity.imageUrl = newPath;\r\n    logger.debug(\"Product.controller - entity: \" + JSON.stringify(entity));\r\n    logger.debug(\"Product.controller - imageUrl: \" + entity.imageUrl);\r\n    \r\n    return entity.save()\r\n      .then(updated => {\r\n        return updated;\r\n      });\r\n  }\r\n}\r\n\r\n\r\n// Gets a list of Products\r\nexport function index(req, res) {\r\n  return Product.find().exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Product from the DB\r\nexport function show(req, res) {\r\n  return Product.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Product in the DB\r\nexport function create(req, res) {\r\n  return Product.create(req.body)\r\n    .then(respondWithResult(res, 201))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Uploads a new Product's image in the DB\r\nexport function upload(req, res) {\r\n  logger.debug(\"Product.controller - Upload function\");\r\n  var file = req.files.file;\r\n  if(!file){\r\n    return handleError(res)('File not provided');\r\n  }\r\n\r\n  return Product.findByIdAsync(req.params.id)\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveFile(res, file))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n};\r\n\r\n// Updates an existing Product in the DB\r\nexport function update(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Product.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Product from the DB\r\nexport function destroy(req, res) {\r\n  return Product.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}"]}